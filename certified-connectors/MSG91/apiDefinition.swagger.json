{
  "swagger": "2.0",
  "info": {
    "title": "MSG91 for SMS Text & Voice",
    "description": "API for SMS Text, Email & Voice. MSG91 delivers over 1 Billion SMS text messages every month. Trusted by 5,000+ companies",
    "version": "1.0",
    "contact": {
      "name": "Pascalcase Support for MSG91",
      "url": "https://pascalcase.com",
      "email": "support@pascalcase.com"
    }
  },
  "host": "world.msg91.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/api/add_group.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "msg"
                },
                "grpId": {
                  "type": "string",
                  "description": "grpId"
                },
                "grpName": {
                  "type": "string",
                  "description": "grpName"
                },
                "msgType": {
                  "type": "string",
                  "description": "msgType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Add a Group",
        "description": "Create a new group (list) to store contacts",
        "operationId": "AddGroup",
        "parameters": [
          {
            "name": "group_name",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Name of the Group",
            "x-ms-summary": "Name of the Group"
          }
        ]
      }
    },
    "/api/add_contact.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "msg"
                },
                "msg_type": {
                  "type": "string",
                  "description": "msg_type"
                },
                "updateLoadFields": {
                  "type": "boolean",
                  "description": "updateLoadFields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Add a new Contact to a Group",
        "description": "Add a new Contact to a Group",
        "operationId": "AddContact",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Name of the contact",
            "x-ms-summary": "Name of the contact"
          },
          {
            "name": "mob_no",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Mobile number",
            "x-ms-summary": "Mobile number"
          },
          {
            "name": "group",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Id of the Group",
            "x-ms-summary": "Id of the Group"
          }
        ]
      }
    },
    "/api/delete_group.php": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "msg"
                },
                "msgType": {
                  "type": "string",
                  "description": "msgType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Delete a Group",
        "description": "Delete a Group",
        "operationId": "DeleteGroup",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "group_id of the Group",
            "x-ms-summary": "group_id of the Group"
          }
        ]
      }
    },
    "/api/list_contact.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "contactid": {
                    "type": "string",
                    "description": "contactid"
                  },
                  "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "number"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "msgType": {
                    "type": "string",
                    "description": "msgType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Get all Contacts of a Group",
        "description": "Get all Contacts of a Group",
        "operationId": "ListContacts",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "group_id of the Group",
            "x-ms-summary": "group_id of the Group"
          }
        ]
      }
    },
    "/api/edit_contact.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "msg"
                },
                "msg_type": {
                  "type": "string",
                  "description": "msg_type"
                },
                "updateLoadFields": {
                  "type": "boolean",
                  "description": "updateLoadFields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Edit a Contact",
        "description": "Edit a Contact",
        "parameters": [
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Id of the contact",
            "x-ms-summary": "Id of the contact"
          },
          {
            "name": "group",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Id of the Group",
            "x-ms-summary": "group_id of the Group"
          },
          {
            "name": "mob_no",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "description": "Mobile number to edit",
            "x-ms-summary": "Mobile number"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Name",
            "x-ms-summary": "Name"
          }
        ],
        "operationId": "EditContact"
      }
    },
    "/api/list_group.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "count"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "operationId": "ListGroups",
        "parameters": [],
        "summary": "Lists Groups",
        "description": "Get list of all Groups"
      }
    },
    "/api/delete_contact.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "msg"
                },
                "msg_type": {
                  "type": "string",
                  "description": "msg_type"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Delete a Contact",
        "description": "The operation deletes the contact",
        "operationId": "DeleteContact",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Id of the contact",
            "x-ms-summary": "Id of the contact"
          }
        ]
      }
    },
    "/api/sendhttp.php": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message"
                },
                "type": {
                  "type": "string",
                  "description": "type"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/APIErrorPayload"
            }
          }
        },
        "summary": "Send SMS v1",
        "description": "Send an SMS text message to one number or a group of numbers",
        "operationId": "SendSMSv1",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "mobiles",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Keep numbers in international format (with country code), multiple numbers should be separated by comma (,)",
            "x-ms-summary": "Mobile number"
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Message",
            "description": "Message content to send",
            "x-ms-visibility": "important"
          },
          {
            "name": "sender",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "description": "Receiver will see this as sender's ID.",
            "x-ms-summary": "sender"
          },
          {
            "name": "route",
            "in": "query",
            "required": true,
            "type": "number",
            "x-ms-visibility": "important",
            "description": "Enter route=1 for promotional SMS, route=4 for transactional SMS.",
            "x-ms-summary": "route"
          },
          {
            "name": "response",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "json",
            "x-ms-visibility": "internal"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "number",
            "x-ms-visibility": "advanced",
            "description": "Enter country code if not prefixed to the phone number",
            "x-ms-summary": "country code"
          },
          {
            "name": "flash",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "flash",
            "description": "Pass the integer value 1 for flash SMS, otherwise ignore it."
          },
          {
            "name": "unicode",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "unicode",
            "description": "If your message contains unicode character, then you need to pass integer 1 here."
          },
          {
            "name": "afterminutes",
            "in": "query",
            "required": false,
            "type": "integer",
            "x-ms-visibility": "advanced",
            "description": "Time in minutes after which you want to send sms. (min 10 minutes)",
            "x-ms-summary": "Time in minutes"
          },
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "Pass the group_id which looks something similar to this- 5ec8d20bd6fc056f7c5a9764",
            "x-ms-summary": "group_id"
          },
          {
            "name": "schtime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "You can use format Y-m-d h:i:s (2020-01-01 10:10:00) Or Y/m/d h:i:s (2020/01/01 10:10:00) Or unix timestamp (1577873400)",
            "x-ms-summary": "Schedule",
            "format": ""
          },
          {
            "name": "campaign",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-visibility": "advanced",
            "description": "Campaign name you wish to create.",
            "x-ms-summary": "Campaign name"
          }
        ]
      }
    }
  },
  "definitions": {
    "APIErrorPayload": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "x-ms-summary": "Message"
        },
        "msgType": {
          "type": "string",
          "x-ms-summary": "Message Type"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "query",
      "name": "authkey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://msg91.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://msg91.com/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Communication;Marketing"
    }
  ]
}